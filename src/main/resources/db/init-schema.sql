CREATE TABLE citizenhips
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id BIGINT,
    status    SMALLINT,
    name      VARCHAR(255),
    CONSTRAINT pk_citizenhips PRIMARY KEY (id)
);

CREATE TABLE departments
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id  BIGINT,
    status     SMALLINT,
    name       VARCHAR(255),
    short_name VARCHAR(255),
    room       VARCHAR(255),
    faculty_id BIGINT,
    CONSTRAINT pk_departments PRIMARY KEY (id)
);

CREATE TABLE deviations
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id        BIGINT,
    status           SMALLINT,
    student_id       BIGINT,
    msg_type         VARCHAR(255),
    expelled         VARCHAR(255),
    reason_number    INTEGER,
    deviation_msg    VARCHAR(255),
    msg_date         TIMESTAMP WITHOUT TIME ZONE,
    date_start       TIMESTAMP WITHOUT TIME ZONE,
    date_end         TIMESTAMP WITHOUT TIME ZONE,
    last_name_new    VARCHAR(255),
    group_name_new   VARCHAR(255),
    msg1             VARCHAR(255),
    msg2             VARCHAR(255),
    command_msg1     VARCHAR(255),
    command_msg      VARCHAR(255),
    date_liquidation TIMESTAMP WITHOUT TIME ZONE,
    penalty          INTEGER,
    CONSTRAINT pk_deviations PRIMARY KEY (id)
);

CREATE TABLE disciplines
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id     BIGINT,
    status        SMALLINT,
    name          VARCHAR(255),
    short_name    VARCHAR(255),
    department_id BIGINT,
    CONSTRAINT pk_disciplines PRIMARY KEY (id)
);

CREATE TABLE documents
(
    id                        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id                 BIGINT,
    status                    SMALLINT,
    full_namel                VARCHAR(255),
    first_namel               VARCHAR(255),
    case_no                   BIGINT,
    citizenship_string        VARCHAR(255),
    citizenship               BIGINT,
    student_language_string   VARCHAR(255),
    student_language          BIGINT,
    birth_date                date,
    birth_place               VARCHAR(255),
    education_string          VARCHAR(255),
    institution               BIGINT,
    education_year_end        INTEGER,
    reg_city_type             INTEGER,
    reg_city                  VARCHAR(255),
    reg_index                 VARCHAR(255),
    reg_state                 VARCHAR(255),
    reg_region                VARCHAR(255),
    reg_city2                 VARCHAR(255),
    reg_street                VARCHAR(255),
    reg_house                 VARCHAR(255),
    reg_house_part            VARCHAR(255),
    reg_flat                  VARCHAR(255),
    job                       VARCHAR(255),
    job_experience            DOUBLE PRECISION,
    enrollment_order          VARCHAR(255),
    enrollment_date           date,
    deviation_type            INTEGER,
    passport_serial           VARCHAR(255),
    passport_number           VARCHAR(255),
    passport_issue_date       date,
    passport_issue_string     VARCHAR(255),
    passport_id               VARCHAR(255),
    father_full_name          VARCHAR(255),
    father_job                VARCHAR(255),
    father_phone              VARCHAR(255),
    mother_full_name          VARCHAR(255),
    mother_job                VARCHAR(255),
    mother_phone              VARCHAR(255),
    payment_type              VARCHAR(255),
    benefits                  VARCHAR(255),
    education1                VARCHAR(255),
    education1document_type   VARCHAR(255),
    education1document_serial VARCHAR(255),
    education1document_number VARCHAR(255),
    enroll_score              DOUBLE PRECISION,
    need_hostel               BOOLEAN                                 NOT NULL,
    re_enroll                 BOOLEAN                                 NOT NULL,
    last_surname              VARCHAR(255),
    education2                VARCHAR(255),
    education2document_type   VARCHAR(255),
    education2document_serial VARCHAR(255),
    education2document_number VARCHAR(255),
    education3                VARCHAR(255),
    education3document_type   VARCHAR(255),
    education3document_serial VARCHAR(255),
    education3document_number VARCHAR(255),
    enroll_student_score      VARCHAR(255),
    student_number            VARCHAR(255),
    unbound                   VARCHAR(255),
    state_support             BOOLEAN                                 NOT NULL,
    move                      BOOLEAN                                 NOT NULL,
    document_number           BIGINT,
    email                     VARCHAR(255),
    enroll_date               date,
    migrate_date              date,
    CONSTRAINT pk_documents PRIMARY KEY (id)
);

CREATE TABLE exams
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id BIGINT,
    status    SMALLINT,
    name      VARCHAR(255),
    type      SMALLINT,
    CONSTRAINT pk_exams PRIMARY KEY (id)
);

CREATE TABLE faculties
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id            BIGINT,
    status               SMALLINT,
    short_name           VARCHAR(255),
    name                 VARCHAR(255),
    name_genitive        VARCHAR(255),
    name_dative          VARCHAR(255),
    rector_name          VARCHAR(255),
    dean                 VARCHAR(255),
    clerk_name           VARCHAR(255),
    enroll_msg_paid      VARCHAR(255),
    enroll_date_paid     date,
    enroll_msg_not_paid  VARCHAR(255),
    enroll_date_not_paid date,
    journal_type         INTEGER,
    faculty_type         INTEGER,
    semester_start_year  INTEGER,
    semester_end_year    INTEGER,
    semester             VARCHAR(255),
    move_msg_number      VARCHAR(255),
    move_msg_date        date,
    education_type       INTEGER,
    CONSTRAINT pk_faculties PRIMARY KEY (id)
);

CREATE TABLE groups
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id  BIGINT,
    status     SMALLINT,
    name       VARCHAR(255),
    spec_id    BIGINT,
    faculty_id BIGINT,
    year_start INTEGER,
    year_end   INTEGER,
    date_start date,
    date_end   date,
    score      DOUBLE PRECISION,
    CONSTRAINT pk_groups PRIMARY KEY (id)
);

CREATE TABLE institutions
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id  BIGINT,
    status     SMALLINT,
    full_name  VARCHAR(255),
    short_name VARCHAR(255),
    CONSTRAINT pk_institutions PRIMARY KEY (id)
);

CREATE TABLE qualifications
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id     BIGINT,
    status        SMALLINT,
    name          VARCHAR(255),
    name_genitive VARCHAR(255),
    CONSTRAINT pk_qualifications PRIMARY KEY (id)
);

CREATE TABLE specialities
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id  BIGINT,
    status     SMALLINT,
    name       VARCHAR(255),
    short_name VARCHAR(255),
    spec_code  VARCHAR(255),
    CONSTRAINT pk_specialities PRIMARY KEY (id)
);

CREATE TABLE specializations
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id        BIGINT,
    status           SMALLINT,
    name             VARCHAR(255),
    short_name       VARCHAR(255),
    spez_code        VARCHAR(255),
    spec_id          BIGINT,
    qualification_id BIGINT,
    CONSTRAINT pk_specializations PRIMARY KEY (id)
);

CREATE TABLE student_language
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id BIGINT,
    status    SMALLINT,
    name      VARCHAR(255),
    CONSTRAINT pk_studentlanguage PRIMARY KEY (id)
);

CREATE TABLE students
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id          BIGINT,
    status             SMALLINT,
    last_name          VARCHAR(255),
    first_name         VARCHAR(255),
    second_name        VARCHAR(255),
    sex                INTEGER,
    city_type          INTEGER,
    address            VARCHAR(255),
    address_country    VARCHAR(255),
    address_index      VARCHAR(255),
    address_state      VARCHAR(255),
    address_region     VARCHAR(255),
    address_city       VARCHAR(255),
    address_street     VARCHAR(255),
    address_house      VARCHAR(255),
    address_house_part VARCHAR(255),
    address_flat       VARCHAR(255),
    phone              VARCHAR(255),
    city_is_village    BOOLEAN                                 NOT NULL,
    last_document_id   BIGINT,
    last_deviation_id  BIGINT,
    spez_id            BIGINT,
    group_id           BIGINT,
    CONSTRAINT pk_students PRIMARY KEY (id)
);

CREATE TABLE study_plan
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id       BIGINT,
    status          SMALLINT,
    group_id        BIGINT                                  NOT NULL,
    year_start      INTEGER,
    year_end        INTEGER,
    semester_number INTEGER,
    semester        VARCHAR(255),
    course          INTEGER,
    exam_type_id    BIGINT                                  NOT NULL,
    discipline_id   BIGINT                                  NOT NULL,
    teacher_id      BIGINT                                  NOT NULL,
    CONSTRAINT pk_study_plan PRIMARY KEY (id)
);

CREATE TABLE teacher_department_merge
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id     BIGINT,
    status        SMALLINT,
    teacher_id    BIGINT,
    department_id BIGINT,
    CONSTRAINT pk_teacher_department_merge PRIMARY KEY (id)
);

CREATE TABLE teachers
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id   BIGINT,
    status      SMALLINT,
    last_name   VARCHAR(255),
    first_name  VARCHAR(255),
    second_name VARCHAR(255),
    degree      VARCHAR(255),
    CONSTRAINT pk_teachers PRIMARY KEY (id)
);

CREATE TABLE educations
(
    id                        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    source_id                 BIGINT,
    status                    SMALLINT,
    student_id                BIGINT,
    education                 VARCHAR(255),
    education_document_type   VARCHAR(255),
    education_document_serial VARCHAR(255),
    education_document_number VARCHAR(255),
    CONSTRAINT pk_educations PRIMARY KEY (id)
);

ALTER TABLE educations
    ADD CONSTRAINT FK_EDUCATIONS_ON_STUDENT FOREIGN KEY (student_id) REFERENCES students (id);

ALTER TABLE departments
    ADD CONSTRAINT FK_DEPARTMENTS_ON_FACULTY FOREIGN KEY (faculty_id) REFERENCES faculties (id);

ALTER TABLE deviations
    ADD CONSTRAINT FK_DEVIATIONS_ON_STUDENT FOREIGN KEY (student_id) REFERENCES students (id);

ALTER TABLE disciplines
    ADD CONSTRAINT FK_DISCIPLINES_ON_DEPARTMENT FOREIGN KEY (department_id) REFERENCES departments (id);

ALTER TABLE documents
    ADD CONSTRAINT FK_DOCUMENTS_ON_CITIZENSHIP FOREIGN KEY (citizenship) REFERENCES citizenhips (id);

ALTER TABLE documents
    ADD CONSTRAINT FK_DOCUMENTS_ON_INSTITUTION FOREIGN KEY (institution) REFERENCES institutions (id);

ALTER TABLE documents
    ADD CONSTRAINT FK_DOCUMENTS_ON_STUDENTLANGUAGE FOREIGN KEY (student_language) REFERENCES student_language (id);

ALTER TABLE groups
    ADD CONSTRAINT FK_GROUPS_ON_FACULTY FOREIGN KEY (faculty_id) REFERENCES faculties (id);

ALTER TABLE groups
    ADD CONSTRAINT FK_GROUPS_ON_SPEC FOREIGN KEY (spec_id) REFERENCES specialities (id);

ALTER TABLE specializations
    ADD CONSTRAINT FK_SPECIALIZATIONS_ON_QUALIFICATION FOREIGN KEY (qualification_id) REFERENCES qualifications (id);

ALTER TABLE specializations
    ADD CONSTRAINT FK_SPECIALIZATIONS_ON_SPEC FOREIGN KEY (spec_id) REFERENCES specialities (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_GROUP FOREIGN KEY (group_id) REFERENCES groups (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_LAST_DEVIATION FOREIGN KEY (last_deviation_id) REFERENCES deviations (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_LAST_DOCUMENT FOREIGN KEY (last_document_id) REFERENCES documents (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_SPEZ FOREIGN KEY (spez_id) REFERENCES specializations (id);

ALTER TABLE study_plan
    ADD CONSTRAINT FK_STUDY_PLAN_ON_DISCIPLINE FOREIGN KEY (discipline_id) REFERENCES disciplines (id);

ALTER TABLE study_plan
    ADD CONSTRAINT FK_STUDY_PLAN_ON_EXAM_TYPE FOREIGN KEY (exam_type_id) REFERENCES exams (id);

ALTER TABLE study_plan
    ADD CONSTRAINT FK_STUDY_PLAN_ON_GROUP FOREIGN KEY (group_id) REFERENCES groups (id);

ALTER TABLE study_plan
    ADD CONSTRAINT FK_STUDY_PLAN_ON_TEACHER FOREIGN KEY (teacher_id) REFERENCES teachers (id);

ALTER TABLE teacher_department_merge
    ADD CONSTRAINT FK_TEACHER_DEPARTMENT_MERGE_ON_DEPARTMENT FOREIGN KEY (department_id) REFERENCES departments (id);

ALTER TABLE teacher_department_merge
    ADD CONSTRAINT FK_TEACHER_DEPARTMENT_MERGE_ON_TEACHER FOREIGN KEY (teacher_id) REFERENCES teachers (id);